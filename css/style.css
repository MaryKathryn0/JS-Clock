*, *::after, *::before {
    box-sizing: border-box;
    font-family: 'Spartan', sans-serif;
}
body {
    background-image: url("https://static.vecteezy.com/system/resources/previews/000/146/087/original/vector-zebra-stripes-background.jpg");
    background-repeat: no-repeat;
    background-size: cover;
    height: 100vh;
    /* margin-top: 75px; */
}

.clock {
    width: 400px;
    height: 400px;
    background-color: rgb(150, 179, 233, .96);
    border-radius: 50%;
    border: 3px solid hotpink;
    /* margin:auto; */
    /* added relative position for clock numbers position as absolute */
    position:relative;
}

.clock .number {
    /* and by default we want rotation value to 0  */
    --rotation: 0;
    position: absolute; 
    /* to make rotation easier around the clock - width & height 100% */
    width: 100%;
    height: 100%;  
    text-align: center;      
    /* using transform to get the rest of the elements around the clock */
    /* with transform we can use the rotate property - change in 30 degree incriment
    going to use a variable called rotation - see default above*/
    transform: rotate(var(--rotation));
}

/* here is where to select rotation for each individual number */
.clock .number1 { --rotation: 30deg; }
.clock .number2 { --rotation: 60deg; }
.clock .number3 { --rotation: 90deg; }
.clock .number4 { --rotation: 120deg; }
.clock .number5 { --rotation: 150deg; }
.clock .number6 { --rotation: 180deg; }
.clock .number7 { --rotation: 210deg; }
.clock .number8 { --rotation: 240deg; }
.clock .number9 { --rotation: 270deg; }
.clock .number10 { --rotation: 300deg; }
.clock .number11 { --rotation: 330deg; }

/* adding circle in middle of clock */
.clock::after {
    content: '';
    position:absolute;
    background-color: black;
    /* z index higher then hands to make sure in front of */
    z-index:11;
    height:15px;
    width: 15px;
    border-radius: 50%;
    /* to center going add top and left 50% */
    top:50%;
    left:50%;
    /* slightly off so adding transform as we did on the hands */
    transform: translate(-50%, -50%);
}

/* adding the hands */
.clock .hand {
    /* make rotation default to 0 */
    --rotation:0;
    position:absolute;
    /* need to move the hands to the middle */
    bottom: 50%;
    left: 50%;
    /* width: 10px;
    height:50%; */
    /* background-color: hotpink; */
    border: 1px solid black;
    /* make the top of hands curved by top left&right radius */
    border-top-left-radius: 10px ;
    border-top-right-radius: 10px ;
    /* use transform origin to make hands move from bottom of hand/center of clock*/
    /* added calc and * 1deg to get hands moving when rotation is changed */
    transform-origin: bottom;
    /* to make sure hands always over numbers */
    z-index:10;
    /* the hands are slightly to the left- use transform */
    /* use translate to move hand 50% backwards to center */
    /* use rotate & variable rotation will use w/ javascript to make the hands rotate */
    transform: translateX(-50%) rotate(calc(var(--rotation) * 1deg));
}

/* differentiating each hand size- height and width */
.clock .hand.second {
    width: 3px;
    height: 45%;
    background-color: hotpink;
}
.clock .hand.minute {
    width: 7px;
    height: 40%;
    background-color: black;
}
.clock .hand.hour {
    width: 10px;
    height: 35%;
    background-color: black;
}